/*
 * test_CFolder
 */

console.log("test CFolder");

load(__DIR__ + "../common/Constants.ajs");



//c_Namespace
load(__DIR__ + "../common/c_Model.ajs");
load(__DIR__ + "../common/c_Folder.ajs");
load(__DIR__ + "../common/c_View.ajs");
load(__DIR__ + "../common/c_Element.ajs");
//load(__DIR__ + "../common/c_Relation.ajs");
//load(__DIR__ + "../common/c_Viewpoint.ajs");

console.log("Start test_CFolder");


/*
load(__DIR__ + "Model_ReplacePropertyValues.ajs");

var changecount = 0;


console.log("Start test_CFolder\n");

changecount += Model_ReplacePropertyValues_ManualInput();

console.log("\nEnd test_CFolder; changecount = " + changecount);
*/

function test_findfromSelectedViews() {

	$(selection).filter("archimate-diagram-model").each(function(v) {

		$(v).find("element").each(function(e) {

			
			console.log(" " + "Element name: " + e.name );			
			
			
			$(e).find().each(function(descendant) {
				console.log("    " + e.name + " has descendant " + descendant.type + " (" + descendant.name + ")" );			
			});
			
			
		
			$(e).children().each(function(child) {
				console.log("    " + e.name + " has child " + child.name);			
			});
			
			$(e).parents().each(function(parent) {
					console.log("    " + e.name + " has some parent " + parent.name);			
			});
				
			
			$(e).parent().each(function(parent) {
				console.log("    " + e.name + " has direct PARENT " + parent.name);			
			});

		});
	});
}

function test_findSubfoldersOfSelectedFolders()  {

	console.log("test_findSubfoldersOfSelectedFolders");

	selectedFolders = $(selection).filter("folder");
	
	if (selectedFolders.size() == 0) {
		window.alert("No folders selected. Exiting...");
		exit();
	}
	
	selectedFolders.each(function(f) {
		
		console.log("\nSelected folder: " + f.name);
		
		
		//folderList = cFolder_GetListOfFolderAndSubfoldersForAGivenFolder(f);
		folderList = cFolder_GetSubfolders(f);
		
				
		console.log("\nfolderList:");
		folderList.each(function(f) {	
		
			console.log("    " + f.name);

		});	
		
	});
}


function test_findFolderAndSubfoldersOfSelectedFolders()  {
	
	var selectedFolders = $(selection).filter("folder");
	var folderList = cFolder_GetListOfFoldersAndSubfoldersForAGivenFolderList(selectedFolders);
	
	console.log("\nfolderList:");
	folderList.each(function(f) {	
		console.log("    " + f.name);
	});	
	
}

function test_findViewsUnderSelectedFolders()  {
	
	var selectedFolders = $(selection).filter("folder");
	var viewList = cFolder_GetAllViewsUnderGivenFolders(selectedFolders);
	
	console.log("\nviewList:");
	viewList.each(function(v) {	
		console.log("    " + v.name);
	});	
}

function test_findItemsUnderSelectedFolders(itemType)  {
	
	console.log("\ntest_findItensUnderSelectedFolders, itemType = " + itemType);	
	
	var selectedFolders = $(selection).filter("folder");
	var itemList = cFolder_GetAllItemsUnderGivenFoldersForGivenType(selectedFolders, itemType);
	
	console.log("itemList(" + itemType + "):");
	itemList.each(function(item) {	
		console.log("    " + item.name + " (" + item.type + ")");
	});	
}

function test_findItemsWithGivenTypeAndNameUnderSelectedFolders(itemType, itemName, completeName, caseSensitiveName)  {
	
	var strComplete = "complete string"
	if (!completeName)
		strComplete = "substring ok";
	
	var strCaseSensitive = "caseSensitive";
	if (!caseSensitiveName)
		strCaseSensitive = "not caseSensitive";
	
	console.log("\ntest_findItemsWithGivenNameUnderSelectedFolders, itemType = " + itemType + ", itemName = " + itemName + ", " + strComplete +  ", " + strCaseSensitive);	

	
	var selectedFolders = $(selection).filter("folder");
	var itemList = cFolder_GetAllItemsUnderGivenFoldersForGivenTypeAndName(selectedFolders, itemType, itemName, completeName, caseSensitiveName);
	
	console.log("itemList(" + itemType + "):");
	itemList.each(function(item) {	
		console.log("    " + item.name + " (" + item.type + ")");
	});	
}


//test_findfromSelectedViews();
//test_findSubfoldersOfSelectedFolders();
//test_findFolderAntest_findItensUnderSelectedFoldersdSubfoldersOfSelectedFolders();

("view");
test_findItemsUnderSelectedFolders("concept");
test_findItemsUnderSelectedFolders("element");
test_findItemsUnderSelectedFolders("relationship");
test_findItemsUnderSelectedFolders("business-actor");
test_findItemsWithGivenTypeAndNameUnderSelectedFolders("business-actor", "Erik", true, true);
test_findItemsWithGivenTypeAndNameUnderSelectedFolders("business-actor", "rik", true, true);
test_findItemsWithGivenTypeAndNameUnderSelectedFolders("business-actor", "rik", false, true);
test_findItemsWithGivenTypeAndNameUnderSelectedFolders("business-actor", "RIK", false, true);
test_findItemsWithGivenTypeAndNameUnderSelectedFolders("business-actor", "RIK", false, false);




