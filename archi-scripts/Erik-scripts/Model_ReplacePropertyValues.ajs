/*
 * Model_ReplacePropertyValues
 */

console.clear();
console.log("Model_ReplacePropertyValues");

function ReplacePropertyValue(concept, propName, oldPropValue, newPropValue) {

	if (concept.prop(propName) == oldPropValue) {
		console.log(". Replacing property value " + oldPropValue + " with " + newPropValue + " for property " + propName + " for concept " + concept.name + " (" + concept.type + ")" );
		concept.prop(propName, newPropValue);
		return 1;
	}
	
	return 0;
}

function Model_ReplacePropertyValues_ManualInput() {
	
	var numReplaced = 0;
	
	var propName = window.prompt("Property to update?", "");
	if (propName) {
		var oldPropValue = window.prompt("Old value of '"+propName+"' (leave empty to cancel)?", "");
		
		if (oldPropValue) {
			var newPropValue = window.prompt("New value of '"+propName+"' (leave empty to cancel)?", "");
			
			$("concept").each(function(concept) {
				numReplaced += ReplacePropertyValue(concept, propName, oldPropValue, newPropValue);
				console.log("numReplaced = " + numReplaced);
			});			
		}
	}
}

// Model_ReplacePropertyValues_ManualInput();