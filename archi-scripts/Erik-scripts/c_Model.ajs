/*
 * c_Model
 */

//load(__DIR__ + "Constants.ajs");
//load(__DIR__ + "CommonFunctions.ajs");

var m_model = null;


function cModel_InitExistingFromFile(filePath) {

	if (filePath == null)
		filePath = window.promptOpenFile({ title: "Open Model", filterExtensions: [ "*.archimate" ] });

	if(filePath != null) {
		// Load the model and set as current model
		$.model.load(filePath).setAsCurrent();
		m_model = model;

		m_model.openInUI();
	}
	
	m_testThis = 2;
	return m_model;
}


function cModel_InitExistingFromArchiObject(archiModel) {

	m_model = archiModel;
	
	if (archiModel != null)
		m_model.openInUI();
	
	return m_model;
}

function cModel_GetArchiModelObject() {
	console.log("model.name = " + model.name);
	return m_model;
}

function cModel_GetCurrentModelName() {
	return m_model.name;
}

var cModel_GetDirectlySelectedElements = function() {

	var elements = $(selection).filter("element");
	return elements;
}

var cModel_GetAllSelectedConcepts = function() {

	var concepts = $(selection).filter("concept"); // includes elements and relationships
	return concepts;
}


var cModel_GetElementsInSelectedViews = function() {

	var elements = null;
	
	$(selection).filter("view").each(function(v) {
		
		if (elements == null) {
			elements = $(v).children().filter("element");
			//test TBD: elements = cView_GetElementsInView(v);
		}
		else {
			elements.add ( $(v).children().filter("element") );
			//test TBD: elements.add ( cView_GetElementsInView(v) );
		}
		
	});
	
	return elements;
}

var cModel_GetSelectedView = function() {

	var vus = $(selection).filter("view");
	
	console.log("vus.length = " + vus.length); 	
	if (vus.length > 1)
		return null;
	if (vus.length < 1)
		return null;
	
	return vus[0];
}


var cModel_FindAllModelElementsWithName = function(elementName) {

    return $("element").filter(function(o) {
        return ( (o.name == elementName) );
    });
}